{"version":3,"sources":["scripts/main.js"],"names":["request","url","fetch","then","response","json","idList","getFirstReceivedDetails","someIdList","console","log","Promise","race","map","currentId","resolve","reject","setTimeout","result","getAllSuccessfulDetails","allSettled","results","list","phoneIdsList","phone","id","Object","assign"],"mappings":";AAEA,aAEA,IAAMA,EAAU,SAACC,GACRC,OAAAA,MAAS,4DAA8DD,OAAAA,IAC3EE,KAAK,SAAAC,GACGA,OAAAA,EAASC,UAIhBC,EAAS,GAYf,SAASC,EAAwBC,GAC/BC,QAAQC,IAAIF,GAEZG,QAAQC,KACNJ,EAAWK,IAAI,SAAAC,GACN,OAAA,IAAIH,QAAQ,SAACI,EAASC,GAC3BD,EAAQf,EAAmBc,WAAAA,OAAAA,EAApB,WAEPG,WAAW,WACTD,EAAO,qBACN,UAINb,KAAK,SAAAe,GAAUT,OAAAA,QAAQC,IAAIQ,KAGhC,SAASC,EAAwBX,GAC/BC,QAAQC,IAAIF,GAEZG,QAAQS,WACNZ,EAAWK,IAAI,SAAAC,GACN,OAAA,IAAIH,QAAQ,SAACI,EAASC,GAC3BD,EAAQf,EAAmBc,WAAAA,OAAAA,EAApB,WAEPG,WAAW,WACTD,EAAO,qBACN,UAINb,KAAK,SAAAkB,GAAWZ,OAAAA,QAAQC,IAAIW,KAzCjCrB,EAAQ,gBACLG,KAAK,SAAAmB,GACEC,IAAAA,EAAeD,EAAKT,IAAI,SAAAW,GAASA,OAAAA,EAAMC,KAE7CC,OAAOC,OAAOrB,EAAQiB,GAEtBhB,EAAwBD,GACxBa,EAAwBb","file":"main.ea58a7a8.js","sourceRoot":"..\\src","sourcesContent":["/* eslint-disable prefer-promise-reject-errors */\n/* eslint-disable no-console */\n'use strict';\n\nconst request = (url) => {\n  return fetch(`${'https://mate-academy.github.io/phone-catalogue-static/api'}${url}`) /* eslint-disable-line */\n    .then(response => {\n      return response.json();\n    });\n};\n\nconst idList = [];\n\nrequest('/phones.json')\n  .then(list => {\n    const phoneIdsList = list.map(phone => phone.id);\n\n    Object.assign(idList, phoneIdsList);\n\n    getFirstReceivedDetails(idList);\n    getAllSuccessfulDetails(idList);\n  });\n\nfunction getFirstReceivedDetails(someIdList) {\n  console.log(someIdList);\n\n  Promise.race(\n    someIdList.map(currentId => {\n      return new Promise((resolve, reject) => {\n        resolve(request(`/phones/${currentId}.json`));\n\n        setTimeout(() => {\n          reject('Bruh u got error');\n        }, 5000);\n      });\n    })\n  )\n    .then(result => console.log(result));\n};\n\nfunction getAllSuccessfulDetails(someIdList) {\n  console.log(someIdList);\n\n  Promise.allSettled(\n    someIdList.map(currentId => {\n      return new Promise((resolve, reject) => {\n        resolve(request(`/phones/${currentId}.json`));\n\n        setTimeout(() => {\n          reject('Bruh u got error');\n        }, 5000);\n      });\n    })\n  )\n    .then(results => console.log(results));\n};\n"]}